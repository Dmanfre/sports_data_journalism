```{r}
#load libraries
library(tidyverse)
library(cfbfastR)
library(Hmisc)
install.packages("waffle")
library(waffle)

```

```{r}

Sys.setenv(CFBD_API_KEY = "YG3BnH+G9FNPRxeI+k6t6BjTktLrqqQITj90Rkuw1f6Dt9rL54jczqxjg8rGA3Sj")


```

```{r}
#working with PBP data

plays_2023 <- cfbd_pbp_data(2023)
  
```

```{r}
plays_2023 %>% 
filter(drive_number == 1, play_number == 1, play_type != "KLickoff") %>% 
distinct(home, play_type)

#Many use kickoff as the first play while others to not. 

```

*** College Football Analysis from Sept. 21 homework assignment ***

```{r}

logs <-  read_csv("https://dwillis.github.io/sports-data-files/footballlogs1122.csv")


```

*** Instructions **

Create a new column for point differential between the TeamScore and OpponentScore using mutate. You can use the same `logs` variable. DONE

Create a regression (a linear model, like we did in this chapter Links to an external site.) investigating whether the number of penalties can predict the score differential. In a paragraph below this code block, describe the results: what is the p-value, and does it mean the results are random? Using the r-squared value, how much of the differential can be explained by penalty yards? How useful is this regression?

Next, create a multiple regression model following the examples in this chapter Links to an external site.. Instead of using the number of penalties alone, combine other numeric columns that describe mistakes/bad outcomes to try and predict the score differential with a higher degree of confidence. Look at the same values in the results you did before, but also take into account the residual standard error and the risk of multicollinearity - are you adding columns that explain each other instead of the differential? Below this code block, explain your choices and what you think the results say.

Finally, use filter to narrow the game data so that you're only working with games that are close (you'll need to define what "close" means). Are your simple or multiple regression models better? Worse? Below this code block, explain your choices and what you think the results say.

At the end of all that code, summarize what you've learned about the relationship between penalties and point differential and whether you think there's a story there, whether it's useful in adding context within a larger story, or something else. Would you use this in journalism and, if so, how?

The goal of this exercise is not that you all will come up with the same approach - I hope that doesn't happen - but to get you to think about ways you could measure an outcome and test what influences it. A crucial part of that is to have you write out your thoughts and reactions, so don't skimp on that part.

Make sure to save your work and push the cfb.rmd notebook to GitHub, then submit the link in ELMS.


```{r}
#Create a new column for point differential between the TeamScore and OpponentScore using mutate. You can use the same `logs` variable.

logs <- logs %>% 
mutate(differential = abs(TeamScore - OpponentScore))

```

```{r}
#Create a regression (a linear model, like we did in this chapter Links to an external site.) investigating whether the number of penalties can predict the score differential. 

model1 <- lm(differential ~ Penalties, data=logs)
summary(model1)

# I kept getting an error saying invalid langugae so I used ChatGPT to tell me that what I was doing wrong was originally writing the code like this model1 <- logs %>% lm(differential ~ Penalties, data=logs) summary(model1)... the error was that I did not need the first logs. I only needed to set the data equal to logs.

#In a paragraph below this code block, describe the results: what is the p-value, and does it mean the results are random? Using the r-squared value, how much of the differential can be explained by penalty yards? How useful is this regression?
  
#The p-value is 0.0158 or 2%. This is low but not as low as we have seen before in other examples. The R-Squared value is close to 0 which means there is not much of a correlation to this data. The regression is not successful because there is a very high Risidual Standard of Error in the 20s. I think you go off the R value when you say that less than 1% of the value can be explained by the penalty yards. 


```
Next, create a multiple regression model following the examples in this chapter Links to an external site..

Instead of using the number of penalties alone, combine other numeric columns that describe mistakes/bad outcomes to try and predict the score differential with a higher degree of confidence. 

Look at the same values in the results you did before, but also take into account the residual standard error and the risk of multicollinearity - are you adding columns that explain each other instead of the differential? Below this code block, explain your choices and what you think the results say.

```{r}




model2 <- lm(differential ~ DefYards + OffenseAvg + OffensiveYards, data=logs)
summary(model2)



## Struggled a bit with this question. Is this a question where we would create a martrix?

#The code I went with tries to balance out things from both sides of the ball. I'm sure there is a combination that produces a lower standard error score which would make a stronger relationship but getting it to a 12 down from 22 is good in my book. It also produced a high R-squared closer to 1 which means that there is something correlated about these figures in determining the point differental of a game. 


```
Finally, use filter to narrow the game data so that you're only working with games that are close (you'll need to define what "close" means). Are your simple or multiple regression models better? Worse? Below this code block, explain your choices and what you think the results say.

At the end of all that code, summarize what you've learned about the relationship between penalties and point differential and whether you think there's a story there, whether it's useful in adding context within a larger story, or something else. Would you use this in journalism and, if so, how?

The goal of this exercise is not that you all will come up with the same approach - I hope that doesn't happen - but to get you to think about ways you could measure an outcome and test what influences it. A crucial part of that is to have you write out your thoughts and reactions, so don't skimp on that part.

Make sure to save your work and push the cfb.rmd notebook to GitHub, then submit the link in ELMS.

```{r}
logs %>% 
  group_by(differential) %>% 
  count() %>% 
  arrange(desc(differential))

  
  #Going to define a close game as anything under 7 points. So I should create a filter to only show me the games with a score differential of 7 or less.

less_seven <- logs %>% 
filter(differential < 7) %>% 
arrange(desc(differential))
  
#setting up new model
```


```{r}

model3 <- lm(formula = differential ~ DefYards + OffenseAvg + OffensiveYards, 
    data = less_seven)
summary(model3)

#This gave me a very low residual standard of error score but a lower R-squared score as well. What this tells me is that maybe the factors I chose work well in games with a higher differential than those with a lower one. I also think that there is more of a situational relationship here that theres a stronger correlation wtih higher point differentials rather than in close games. Would this mean that penalties don't always influence the point differentials of close games?


```

Working with Waffle charts
Looking at passing and rushing yards for Maryland and Michigan State
```{r}
md <- c("Rushing"=175, "Passing"=314)
ms <- c("Rushing"=100, "Passing"=221)
```

Making the waffle chart using runs and passing
```{r}
#xlab is the label for the x axis
waffle(
        md, 
        rows = 10, 
        title="Maryland's offense", 
        xlab="1 square = 1 yard", 
        colors = c("black", "red")
)
```
```{r}
#comparing the two teams on passing yards 
passing <- c("Maryland"=314, "Michigan State"=221)

waffle(
        passing, 
        rows = 10, 
        title="Maryland vs Michigan State: passing", 
        xlab="1 square = 1 yard", 
        colors = c("red", "green")
)


```

```{r}
#Iron is used to buld multiple waffle charts and stack them on top of each other. 

iron(
 waffle(md, 
        rows = 10, 
        title="Maryland's offense", 
        xlab="1 square = 1 yard", 
        colors = c("black", "red")
        ),
 waffle(ms, 
        rows = 10, 
        title="Michigan State's offense", 
        xlab="1 square = 1 yard", 
        colors = c("black", "green")
        )
)
```
```{r}
md <- c("Rushing"=175, "Passing"=314)
ms <- c("Rushing"=100, "Passing"=221, 168)

```

```{r}

iron(
 waffle(md, 
        rows = 10, 
        title="Maryland's offense", 
        xlab="1 square = 1 yard", 
        colors = c("black", "red")
        ),
 waffle(ms, 
        rows = 10, 
        title="Michigan State's offense", 
        xlab="1 square = 1 yard",
        colors = c("black", "green", "white")
        )
)

```

```{r}
iron(
 waffle(md/2, 
        rows = 10, 
        title="Maryland's offense", 
        xlab="1 square = 2 yards", 
        colors = c("black", "red")
        ),
 waffle(ms/2, 
        rows = 10, 
        title="Michigan State's offense", 
        xlab="1 square = 2 yards",
        colors = c("black", "green", "white")
        )
)

```

Line Charts - good for showing change over time







